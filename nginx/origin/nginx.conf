user nginx;
worker_processes auto;

events {
    worker_connections  1024;
}

http {
    access_log /dev/stdout;
    error_log /dev/stderr;

    limit_req_zone $arg_user zone=stream:1m rate=${HLS_REQ_PER_SEC}r/m;

    server {
        listen 80;
        root /tmp/hls;

        set_real_ip_from  ${TRUSTED_PROXY};
        real_ip_header    ${REAL_IP_HEADER};

        types {
            application/vnd.apple.mpegurl m3u8;
        }

        location /hls {
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin ${CORS_URL};

            alias /tmp/hls;

            location ~ ([a-zA-Z0-9]+)\.m3u8$ {
                secure_link $arg_token,$arg_expires;
                secure_link_md5 "$arg_expires $realip_remote_addr $1 $arg_user ${SECURE_LINK_SECRET}";

                if ($secure_link = "") { return 403; }
                if ($secure_link = "0") { return 403; }

                limit_req zone=stream burst=${HLS_REQ_BURST} nodelay;
            }
        }
    }
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        interleave on;

        application stream {
            live on;

            wait_key on;
            sync 10ms;

            hls on;
            hls_fragment ${HLS_FRAGMENT};
            hls_fragment_naming timestamp;
            hls_playlist_length ${HLS_PLAYLIST_LENGTH};
            hls_path /tmp/hls;
            hls_base_url ${HLS_URL};

            deny play all;

            on_publish http://nginx/origin/publish;
            on_publish_done http://nginx/origin/publish-done;
        }
    }
}